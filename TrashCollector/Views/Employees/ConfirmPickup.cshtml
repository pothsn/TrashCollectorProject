@model TrashCollector.Models.Pickup

@{
    ViewBag.Title = "ConfirmPickup";
}

<h2>ConfirmPickup</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Pickup</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.RegularPickupDay)
    @Html.HiddenFor(model => model.ExtraPickupDay)
    @Html.HiddenFor(model => model.Bill)
    @Html.HiddenFor(model => model.TemporarySuspensionStart)
    @Html.HiddenFor(model => model.TemporarySuspensionEnd)


    <div class="form-group">
        @Html.LabelFor(model => model.PickupConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.PickupConfirmed)
                @Html.ValidationMessageFor(model => model.PickupConfirmed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExtraPickupConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ExtraPickupConfirmed)
                @Html.ValidationMessageFor(model => model.ExtraPickupConfirmed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
